rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isFriend(viewerUid, ownerUid) {
      return exists(/databases/$(database)/documents/users/$(viewerUid)/friends/$(ownerUid)) ||
             exists(/databases/$(database)/documents/users/$(ownerUid)/friends/$(viewerUid));
    }
    // Require auth for all document reads/writes by default
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // Top-level user document: each user can only access their own user doc
    match /users/{userId} {
      allow read, create, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // User-scoped gifts
    match /users/{userId}/gifts/{giftId} {
      // Owner full access
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;

      // Read if owner or friends (mirrored per-user friend docs)
      allow read: if request.auth != null && (
        request.auth.uid == userId ||
        isFriend(request.auth.uid, userId)
      );
    }

    // User-scoped friends: each user can only access their own friends subcollection
    match /users/{userId}/friends/{friendId} {
      allow read, create, update, delete: if request.auth != null && request.auth.uid == userId;
    }
  }
}


